//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Interface.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMarathon", ReplyAction="http://tempuri.org/IService1/GetMarathonResponse")]
        string[] GetMarathon();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMarathon", ReplyAction="http://tempuri.org/IService1/GetMarathonResponse")]
        System.Threading.Tasks.Task<string[]> GetMarathonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventType", ReplyAction="http://tempuri.org/IService1/GetEventTypeResponse")]
        string[][] GetEventType(int idMarathon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEventType", ReplyAction="http://tempuri.org/IService1/GetEventTypeResponse")]
        System.Threading.Tasks.Task<string[][]> GetEventTypeAsync(int idMarathon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGender", ReplyAction="http://tempuri.org/IService1/GetGenderResponse")]
        string[] GetGender();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetGender", ReplyAction="http://tempuri.org/IService1/GetGenderResponse")]
        System.Threading.Tasks.Task<string[]> GetGenderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPreviousResult", ReplyAction="http://tempuri.org/IService1/GetPreviousResultResponse")]
        string[][] GetPreviousResult(int fromAge, int toAge, int idMarathon, string idEventType, string gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPreviousResult", ReplyAction="http://tempuri.org/IService1/GetPreviousResultResponse")]
        System.Threading.Tasks.Task<string[][]> GetPreviousResultAsync(int fromAge, int toAge, int idMarathon, string idEventType, string gender);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Interface.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Interface.ServiceReference1.IService1>, Interface.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetMarathon() {
            return base.Channel.GetMarathon();
        }
        
        public System.Threading.Tasks.Task<string[]> GetMarathonAsync() {
            return base.Channel.GetMarathonAsync();
        }
        
        public string[][] GetEventType(int idMarathon) {
            return base.Channel.GetEventType(idMarathon);
        }
        
        public System.Threading.Tasks.Task<string[][]> GetEventTypeAsync(int idMarathon) {
            return base.Channel.GetEventTypeAsync(idMarathon);
        }
        
        public string[] GetGender() {
            return base.Channel.GetGender();
        }
        
        public System.Threading.Tasks.Task<string[]> GetGenderAsync() {
            return base.Channel.GetGenderAsync();
        }
        
        public string[][] GetPreviousResult(int fromAge, int toAge, int idMarathon, string idEventType, string gender) {
            return base.Channel.GetPreviousResult(fromAge, toAge, idMarathon, idEventType, gender);
        }
        
        public System.Threading.Tasks.Task<string[][]> GetPreviousResultAsync(int fromAge, int toAge, int idMarathon, string idEventType, string gender) {
            return base.Channel.GetPreviousResultAsync(fromAge, toAge, idMarathon, idEventType, gender);
        }
    }
}
